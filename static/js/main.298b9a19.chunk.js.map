{"version":3,"sources":["components/FileList.js","components/TitleBar.js","components/Bars.js","components/Table.js","components/Stats.js","components/Spinner.js","components/DataSpace.js","App.js","index.js","metadata.js"],"names":["FileList","React","PureComponent","render","props","this","className","files","length","map","f","idx","key","name","id","selectedIdx","onClick","loading","clickFile","TitleBar","Component","count","view","Label","toggleViewFunc","ViewModule","href","url","target","CloudDownload","Bars","buckets","data","maxSize","d3","b","style","left","height","parseInt","title","Table","showAll","setState","showAllRows","slice","stats","columns","metadata","sorting","Fragment","c","type","sortFunc","hist","d","removeSizeLimitFunc","statNames","Stats","renderFeature","col","colStats","includes","nulls","sn","Spinner","message","DataSpace","state","toggleView","document","getElementById","scrollTo","description","lastSort","App","dataCache","evt","currentTarget","error","getData","meta","sortData","colId","find","colName","reverse","comparatorFunc","a","localeCompare","sort","removeSizeLimit","componentDidMount","fullData","cols","forEach","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","total","parsingMap","integer","v","decimal","parseFloat","time","date","timestamp","then","statCol","div","mean","columValues","stdDev","domain","thresholds","info","catch","err","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.298b9a19.chunk.js","sourcesContent":["// Component for navigating files (left nav bar)\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FileList.scss';\n\nexport default class FileList extends React.PureComponent {\n\n\trender() {\n\t\tconst props = this.props\n\t\treturn (\n\t\t\t<div className=\"FileList\">\n\t\t\t\t<div className=\"dataExplo fTitle\">Data Explorer</div>\n\t\t\t\t<div className=\"fileCount fTitle\"> {props.files.length+' files'}</div>\n\t\t\t\t{ props.files.map((f, idx) => (\n\t\t\t\t\t\t<div key={ f.name } \n\t\t\t\t\t\t\tid={ idx }\n\t\t\t\t\t\t\tclassName= {idx===props.selectedIdx ? 'selected' : '' }\n\t\t\t\t\t\t\tonClick={ props.loading ? null : props.clickFile }>\n\t\t\t\t\t\t\t\t{ f.name }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) \n\t\t\t\t)}\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nFileList.propTypes = {\n\tfiles: PropTypes.array.isRequired,\n\tselectedIdx: PropTypes.number.isRequired,\n\tclickFile: PropTypes.func.isRequired,\n\tloading: PropTypes.bool\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CloudDownload, ViewModule, Label } from '@material-ui/icons';\n\nimport './TitleBar.scss';\n\nexport default class TitleBar extends React.Component {\n\n\trender() {\n\t\tconst props = this.props\n\t\treturn (\n\t\t\t<div className=\"TitleBar\">\n\t\t\t\t<h1>\n\t\t\t\t\t{ props.name + ' ' } \n\t\t\t\t\t<span>{ props.count }</span>\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"topIcons\">\n\t\t\t\t\t{props.view==='table' \n\t\t\t\t\t\t? \n\t\t\t\t\t\t\t<Label onClick={props.toggleViewFunc} />\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\t<ViewModule onClick={props.toggleViewFunc} />\n\t\t\t\t\t}\n\t\t\t\t\t<a href={ props.url } target=\"_new\"><CloudDownload /></a>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nTitleBar.propTypes = {\n    name: PropTypes.string.isRequired,\n\tcount: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired,\n\ttoggleViewFunc: PropTypes.func.isRequired,\n\tview: PropTypes.string.isRequired,\n}","// Bar charts component\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nimport './Bars.scss';\n\nexport default class Bars extends React.Component {\n\n    render() {\n        const buckets = this.props.data\n\n        if(buckets){\n            const maxSize = d3.max(buckets)\n    \n            return (\n                <div className=\"Bars\"> \n                    {buckets.map((b, idx) => (\n                            <div key={'b'+idx} style={{ \n                                    left: (idx * 10)+'px', \n                                    height: parseInt(100*(b/maxSize))+'px'\n                                }} \n                                title={b}></div>\n                        )\n                    )}\n                </div>\n            )\n        }else{\n            return (\n                <div className=\"NoBars\">N/A</div>\n            )\n        }\n    }\n}\n\nBars.propTypes = {\n    data: PropTypes.array\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Bars from './Bars';\n\nimport './Table.scss';\n\nexport default class Table extends React.PureComponent {\n\n\trender() {\n\t\tconst props = this.props\n\t\tconst showAllRows = props.showAllRows\n\t\tconst data = showAllRows ? props.data : props.data.slice(0, 200)\n\t\tconst stats = props.stats\n\t\tconst metadata = props.metadata\n\t\tconst columns = metadata.columns\n\t\tconst sorting = props.sorting\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<table className=\"Table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"rowLabels\">\n\t\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t\t<th id={c.name} key={'c'+idx} className={ c.type==='integer' || c.type==='decimal' ? 'rightAlign' : '' }\n\t\t\t\t\t\t\t\t\tonClick={ props.sortFunc }>\n\t\t\t\t\t\t\t\t\t\t<div>{c.name}</div>\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr className=\"rowHisto\">\n\t\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t\t<td key={'c'+idx}>\n\t\t\t\t\t\t\t\t\t<Bars data={ stats[c.name].hist } />\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className={sorting ? 'hidden' : ''}>\n\t\t\t\t\t\t{ data.map((d, idx) => (\n\t\t\t\t\t\t\t<tr key={'r'+idx}>\n\t\t\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t\t\t<td key={'c'+idx} className={ c.type==='integer' || c.type==='decimal' ? 'rightAlign' : '' }>\n\t\t\t\t\t\t\t\t\t\t{d[c.name]}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t{ (showAllRows || data.length === props.data.length) ? null : (\n\t\t\t\t\t<div className=\"showMore\">\n\t\t\t\t\t\tCurrently showing {data.length} rows.\n\t\t\t\t\t\t<span className=\"fakeLink\" onClick={props.removeSizeLimitFunc}>Show all {props.data.length} rows</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tshowAll = () => {\n\t\tthis.setState({\n\t\t\tshowAllRows: true\n\t\t})\n\t}\n}\n\nTable.propTypes = {\n    metadata: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n\tstats: PropTypes.object,\n\tsortFunc: PropTypes.func.isRequired,\n\tremoveSizeLimitFunc: PropTypes.func.isRequired,\n\tlastSort: PropTypes.string,\n\tshowAllRows: PropTypes.bool,\n}","// Component to disply list of columns and info like their min, max, null count...\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Stats.scss';\n\nconst statNames = [\"nulls\",\"min\",\"max\",\"mean\",\"stdDev\"] //,\"total\"\n\nexport default class Stats extends React.PureComponent {\n\n\trender() {\n\t\tconst metadata = this.props.metadata\n\t\tconst columns = metadata.columns\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Stats\">\n\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t<div key={'c'+idx}>\n\t\t\t\t\t\t<h3>{c.name} <span>{c.type}</span></h3>\n\t\t\t\t\t\t{ this.renderFeature(c) }\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<span className=\"clearer\"></span>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderFeature(col) {\n\t\tconst colStats = this.props.stats[col.name]\n\t\t// TODO: handle types below\n\t\tif(['string', 'date', 'time', 'timestamp'].includes(col.type)) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<label>nulls</label>\n\t\t\t\t\t<span>{ colStats.nulls }</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}else{\n\t\t\treturn statNames.map(sn => (\n\t\t\t\t<div key={ sn }>\n\t\t\t\t\t<label>{ sn }</label>\n\t\t\t\t\t<span>{ colStats[sn] }</span>\n\t\t\t\t</div>\n\t\t\t))\n\t\t}\n\t}\n}\n\n\nStats.propTypes = {\n    metadata: PropTypes.object.isRequired,\n    stats: PropTypes.object.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport './Spinner.scss';\n\n// HTML & CSS from http://tobiasahlin.com/spinkit/\n\nexport default class Spinner extends React.PureComponent {\n\n    render() {\n\n        return (\n            <div className=\"evol-loading\"> \n                <div className=\"loading_txt\">{this.props.message || 'Loading...'}</div> \n                <div className=\"spinner\">\n                    <div className=\"bounce1\"></div>\n                    <div className=\"bounce2\"></div>\n                    <div className=\"bounce3\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSpinner.propTypes = {\n\tmessage: PropTypes.string,\n}\n","// Component for viewing a file ( table or columns stats)\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from './TitleBar';\nimport Table from './Table';\nimport Stats from './Stats'; \nimport Spinner from './Spinner'; \n\nexport default class DataSpace extends React.Component {\n\n\tstate = {\n\t\tview: 'table'\n\t}\n\n\trender() {\n\t\tconst props = this.props\n\t\tconst data = props.data\n\t\tconst metadata = this.props.metadata\n\t\tlet count = ((data && data.length) ? data.length + ' rows, ' : '') + metadata.columns.length + ' columns'\n\n\t\treturn (\n\t\t\t<div id=\"DataSpace\" className=\"DataSpace\">\n\t\t\t\t<TitleBar name={ metadata.name } count={ count } url={ metadata.url } toggleViewFunc={ this.toggleView } view={this.state.view} />\n\t\t\t\t<div className=\"file_desc\">{ metadata.description }</div>\n\t\t\t\t{ props.loading \n\t\t\t\t\t?\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t: \n\t\t\t\t\t\tthis.state.view === 'table'\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<Table metadata={ metadata } data={ data } stats={ props.stats } \n\t\t\t\t\t\t\t\tsortFunc={ props.sortFunc } \n\t\t\t\t\t\t\t\tremoveSizeLimitFunc = { props.removeSizeLimitFunc }\n\t\t\t\t\t\t\t\tshowAllRows = { props.showAllRows }\n\t\t\t\t\t\t\t\tlastSort={ props.lastSort } />\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<Stats metadata={ metadata } stats={ props.stats } />\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\ttoggleView = () => {\n\t\tdocument.getElementById('DataSpace').scrollTo(0, 0)\n\t\tthis.setState({\n\t\t\tview: this.state.view==='table' ? 'stats' : 'table'\n\t\t})\n\t}\n\n}\n\n\nDataSpace.propTypes = {\n\tloading: PropTypes.bool,\n\tmetadata: PropTypes.object.isRequired,\n\tdata: PropTypes.array,\n\tstats: PropTypes.object,\n\tsortFunc: PropTypes.func.isRequired,\n\tremoveSizeLimitFunc: PropTypes.func.isRequired,\n\tlastSort: PropTypes.string,\n\tshowAllRows: PropTypes.bool,\n}","\nimport React from 'react';\nimport meta from './metadata.js';\nimport FileList from './components/FileList.js';\nimport DataSpace from './components/DataSpace.js';\nimport * as d3 from 'd3';\n\nimport './App.scss';\n\nexport default class App extends React.Component {\n\n\tdataCache = {}\n\tstate = {\n\t\tselectedIdx: 0,\n\t\tdata: null,\n\t\tstats: null,\n\t\tloading: true,\n\t\tshowAllRows: false,\n\t}\n\n\tclickFile = evt => {\n\t\tconst selectedIdx = parseInt(evt.currentTarget.id)\n\t\tdocument.getElementById('DataSpace').scrollTo(0, 0)\n\t\tthis.setState({\n\t\t\tselectedIdx: selectedIdx,\n\t\t\tdata: null,\n\t\t\tstats: null,\n\t\t\tloading: true,\n\t\t\tshowAllRows: false,\n\t\t\terror: null\n\t\t})\n\t\tthis.getData(meta[selectedIdx])\n\t}\n\n\trender() {\n\t\tconst state = this.state\n\t\tconst idx = state.selectedIdx\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<FileList loading={ this.state.loading }  files={ meta } clickFile={this.clickFile} selectedIdx={idx} />\n\t\t\t\t{this.state.error ? (\n\t\t\t\t\t<div className=\"error\">\n\t\t\t\t\t\tAn error occured while requesting data from the server.\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<DataSpace \n\t\t\t\t\t\tloading={ state.loading } \n\t\t\t\t\t\tmetadata={ meta[idx] } \n\t\t\t\t\t\tdata={ state.data } \n\t\t\t\t\t\tstats={ state.stats } \n\t\t\t\t\t\tsortFunc={ this.sortData }\n\t\t\t\t\t\tlastSort={ state.lastSort }\n\t\t\t\t\t\tshowAllRows={ state.showAllRows }\n\t\t\t\t\t\tremoveSizeLimitFunc={ this.removeSizeLimit }\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\t//document.title = \n\t\t//window.scrollTo(0, 0)\n\t\tthis.getData(meta[this.state.selectedIdx])\n\t}\n\n\tgetData(metadata) {\n\t\t// get data, cast values, and gather stats\n\t\tconst url = metadata.url\n\t\tif(this.dataCache[url]){\n\t\t\tconst fullData = this.dataCache[url]\n\t\t\tthis.setState({\n\t\t\t\tdata: fullData.data,\n\t\t\t\tstats: fullData.stats,\n\t\t\t\tloading: false,\n\t\t\t\tshowAllRows: false,\n\t\t\t\tlastSort: '',\n\t\t\t})\n\t\t}else{\n\t\t\tconst cols = metadata.columns\n\t\t\tlet stats = {}\n\t\t\tcols.forEach(c => stats[c.name] = c.type === 'string' ? {\n\t\t\t\tnulls: 0,\n\t\t\t} : {\n\t\t\t\tmin: Number.POSITIVE_INFINITY,\n\t\t\t\tmax: Number.NEGATIVE_INFINITY,\n\t\t\t\tnulls: 0,\n\t\t\t\ttotal: 0\n\t\t\t})\n\t\t\tconst parsingMap = {\n\t\t\t\tinteger: v => parseInt(v),\n\t\t\t\tdecimal: v => parseFloat(v),\n\t\t\t\t//TODO: type casting\n\t\t\t\ttime: v => v,\n\t\t\t\tdate: v => v,\n\t\t\t\ttimestamp: v => v,\n\t\t\t}\n\t\t\td3.csv(url, d => {\n\t\t\t\tcols.forEach(c => {\n\t\t\t\t\tif(c.type!=='string'){\n\t\t\t\t\t\tconst colName = c.name\n\t\t\t\t\t\tlet v = d[colName]\n\t\t\t\t\t\tif(v===''){\n\t\t\t\t\t\t\tstats[c].nulls += 1\n\t\t\t\t\t\t\td[colName] = null\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tv = parsingMap[c.type](v)\n\t\t\t\t\t\t\td[colName] = v\n\t\t\t\t\t\t\tif(c.type==='integer' || c.type==='decimal'){\n\t\t\t\t\t\t\t\tif(v > stats[colName].max){\n\t\t\t\t\t\t\t\t\tstats[colName].max = v\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(v < stats[colName].min){\n\t\t\t\t\t\t\t\t\tstats[colName].min = v\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstats[colName].total += v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn d\n\t\t\t}).then(data => {\n\t\t\t\tcols.forEach(c => {\n\t\t\t\t\tif(c.type!=='string'){\n\t\t\t\t\t\tconst statCol = stats[c.name]\n\t\t\t\t\t\tconst div = data.length - statCol.nulls\n\t\t\t\t\t\tstatCol.mean = div!==0 ? (statCol.total / div) : 'N/A'\n\t\t\t\t\t\tif(c.type==='integer' || c.type==='decimal'){\n\t\t\t\t\t\t\tconst columValues = data.map(d => d[c.name])\n\t\t\t\t\t\t\tstatCol.stdDev = d3.deviation(columValues)\n\t\t\t\t\t\t\tstatCol.hist = d3.histogram()\n\t\t\t\t\t\t\t\t.domain([statCol.min, statCol.max])\n\t\t\t\t\t\t\t\t.thresholds(19)(columValues)\n\t\t\t\t\t\t\t\t.map(b => b.length)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tconst info = {\n\t\t\t\t\tdata: data,\n\t\t\t\t\tstats: stats,\n\t\t\t\t}\n\t\t\t\tthis.dataCache[url] = info\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tlastSort: '',\n\t\t\t\t\t...info\n\t\t\t\t})\n\n\t\t\t}).catch(err => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: err.message\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tsortData = evt => {\n\t\tconst colId = evt.currentTarget.id\n\t\tconst cols = meta[this.state.selectedIdx].columns\n\t\tconst col = cols.find(c => c.name===colId)\n\t\tconst colName = col.name\n\n\t\tif(colName=== this.state.lastSort){\n\t\t\tthis.setState({ \n\t\t\t\tdata: this.state.data.reverse(),\n\t\t\t\tlastSort: '',\n\t\t\t })\n\t\t}else{\n\t\t\tlet comparatorFunc\n\t\t\tif(col.type==='string'){\n\t\t\t\tcomparatorFunc = (a, b) => (a[colName]||'').localeCompare(b[colName]||'')\n\t\t\t}else{\n\t\t\t\t// TODO: other cases\n\t\t\t\tcomparatorFunc = (a, b) => {\n\t\t\t\t\tif(a[colName]>b[colName]){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\tif(b[colName]>a[colName]){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({ \n\t\t\t\tdata: this.state.data.sort(comparatorFunc),\n\t\t\t\tlastSort: colName,\n\t\t\t\tshowAllRows: false\n\t\t\t })\n\t\t}\n\n\t}\n\n\tremoveSizeLimit = () => {\n\t\tthis.setState({\n\t\t\tshowAllRows: true\n\t\t})\n\t}\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));","// Metadata about the different files to explore\n\n/*\nPossible column types:\n    integer\n    decimal\n    time\n    date\n    timestamp\n    string\n*/\n\nmodule.exports = [\n\t{\n        name: \"content\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content.csv\",\n        description: 'Articles information.',\n        columns: [\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'author',\n                type: 'string'\n            },\n            {\n                name: 'body',\n                type: 'string'\n            },\n            {\n                name: 'target_lat',\n                type: 'decimal'\n            },\n            {\n                name: 'target_long',\n                type: 'decimal'\n            },\n            {\n                name: 'language',\n                type: 'string'\n            },\n            {\n                name: 'is_recommendable',\n                type: 'integer'\n            },\n        ]\n\t},\n\t{\n        name: \"content_display\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content_display.csv\",\n        description: 'Page views and questions.',\n        columns: [\n            {\n                name: 'content_display_id',\n                type: 'integer'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'question_id',\n                type: 'integer'\n            },\n            {\n                name: 'latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'longitude',\n                type: 'decimal'\n            },\n            {\n                name: 'timestamp',\n                type: 'decimal'\n            },\n            {\n                name: 'clicked',\n                type: 'integer'\n            },\n        ]\n\t},\n\t{\n        name: \"content_topic\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content_topic.csv\",\n        description: 'Articles categorization.',\n        columns: [\n            {\n                name: 'id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'topic_id',\n                type: 'string'\n            },\n            {\n                name: 'confidence',\n                type: 'decimal'\n            },\n        ]\n\t},\n\t{\n        name: \"page_view\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/page_view.csv\",\n        description: 'Articles page views.',\n        columns: [\n            {\n                name: 'page_view_id',\n                type: 'integer'\n            },\n            {\n                name: 'timestamp',\n                type: 'timestamp'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'longitude',\n                type: 'decimal'\n            },\n        ]\n\t},\n\t{\n        name: \"questions\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/questions.csv\",\n        description: 'Questions on articles.',\n        columns: [\n            {\n                name: 'question_id',\n                type: 'integer'\n            },\n            {\n                name: 'timestamp',\n                type: 'timestamp'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'question_text',\n                type: 'string'\n            },\n        ]\n\t},\n\t{\n        name: \"stock_portfolio_item\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/stock_portfolio_item.csv\",\n        description: 'Stock market stuff.',\n        columns: [\n            {\n                name: 'id',\n                type: 'integer'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'topic_id',\n                type: 'string'\n            },\n            {\n                name: 'created_at',\n                type: 'time'\n            },\n        ]\n\t},\n\t{\n        name: \"user\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/user.csv\",\n        description: 'Users information.',\n        columns: [\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'first_name',\n                type: 'string'\n            },\n            {\n                name: 'last_name',\n                type: 'string'\n            },\n            {\n                name: 'email',\n                type: 'string'\n            },\n            {\n                name: 'gender',\n                type: 'string'\n            },\n            {\n                name: 'language',\n                type: 'string'\n            },\n            {\n                name: 'birthdate',\n                type: 'date'\n            },\n            {\n                name: 'enthnicity',\n                type: 'string'\n            },\n            {\n                name: 'zip_code',\n                type: 'integer'\n            },\n            {\n                name: 'home_latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'home_longitude',\n                type: 'decimal'\n            },\n            {\n                name: 'home_geo_hash',\n                type: 'decimal'\n            },\n        ]\n\t}\n]\n"],"sourceRoot":""}