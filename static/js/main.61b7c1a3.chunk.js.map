{"version":3,"sources":["metadata.js","components/FileList.js","components/TitleBar.js","components/Bars.js","components/Table.js","components/Stats.js","components/Spinner.js","components/DataSpace.js","App.js","index.js"],"names":["module","exports","name","url","description","columns","type","FileList","props","this","className","files","length","map","f","idx","key","id","selectedIdx","onClick","loading","clickFile","React","PureComponent","TitleBar","count","view","Label","toggleViewFunc","ViewModule","href","target","CloudDownload","Component","Bars","buckets","data","maxSize","d3","b","style","left","height","parseInt","title","Table","state","sorting","stats","metadata","c","sortFunc","hist","d","statNames","Stats","renderFeature","col","colStats","includes","nulls","sn","Spinner","message","DataSpace","toggleView","document","getElementById","scrollTo","setState","lastSort","App","dataCache","evt","currentTarget","error","getData","meta","sortData","comparatorFunc","colId","find","colName","reverse","a","localeCompare","sort","fullData","cols","forEach","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","total","parsingMap","integer","v","decimal","parseFloat","time","date","timestamp","then","statCol","div","mean","columValues","stdDev","domain","thresholds","info","catch","err","ReactDOM","render"],"mappings":"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","file":"static/js/main.61b7c1a3.chunk.js","sourcesContent":["// Metadata about the different files to explore\n\n/*\nPossible column types:\n    integer\n    decimal\n    time\n    date\n    timestamp\n    string\n*/\n\nmodule.exports = [\n\t{\n        name: \"content\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content.csv\",\n        description: 'Articles information.',\n        columns: [\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'author',\n                type: 'string'\n            },\n            {\n                name: 'body',\n                type: 'string'\n            },\n            {\n                name: 'target_lat',\n                type: 'decimal'\n            },\n            {\n                name: 'target_long',\n                type: 'decimal'\n            },\n            {\n                name: 'language',\n                type: 'string'\n            },\n            {\n                name: 'is_recommendable',\n                type: 'integer'\n            },\n        ]\n\t},\n\t{\n        name: \"content_display\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content_display.csv\",\n        description: 'Page views and questions.',\n        columns: [\n            {\n                name: 'content_display_id',\n                type: 'integer'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'question_id',\n                type: 'integer'\n            },\n            {\n                name: 'latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'longitude',\n                type: 'decimal'\n            },\n            {\n                name: 'timestamp',\n                type: 'decimal'\n            },\n            {\n                name: 'clicked',\n                type: 'integer'\n            },\n        ]\n\t},\n\t{\n        name: \"content_topic\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/content_topic.csv\",\n        description: 'Articles categorization.',\n        columns: [\n            {\n                name: 'id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'topic_id',\n                type: 'string'\n            },\n            {\n                name: 'confidence',\n                type: 'decimal'\n            },\n        ]\n\t},\n\t{\n        name: \"page_view\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/page_view.csv\",\n        description: 'Articles page views.',\n        columns: [\n            {\n                name: 'page_view_id',\n                type: 'integer'\n            },\n            {\n                name: 'timestamp',\n                type: 'timestamp'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'content_id',\n                type: 'integer'\n            },\n            {\n                name: 'latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'longitude',\n                type: 'decimal'\n            },\n        ]\n\t},\n\t{\n        name: \"questions\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/questions.csv\",\n        description: 'Questions on articles.',\n        columns: [\n            {\n                name: 'question_id',\n                type: 'integer'\n            },\n            {\n                name: 'timestamp',\n                type: 'timestamp'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'question_text',\n                type: 'string'\n            },\n        ]\n\t},\n\t{\n        name: \"stock_portfolio_item\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/stock_portfolio_item.csv\",\n        description: 'Stock market stuff.',\n        columns: [\n            {\n                name: 'id',\n                type: 'integer'\n            },\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'topic_id',\n                type: 'string'\n            },\n            {\n                name: 'created_at',\n                type: 'time'\n            },\n        ]\n\t},\n\t{\n        name: \"user\",\n        url: \"https://s3-us-west-2.amazonaws.com/tecton.ai.public/coding_exercise_1/user.csv\",\n        description: 'Users information.',\n        columns: [\n            {\n                name: 'user_id',\n                type: 'integer'\n            },\n            {\n                name: 'first_name',\n                type: 'string'\n            },\n            {\n                name: 'last_name',\n                type: 'string'\n            },\n            {\n                name: 'email',\n                type: 'string'\n            },\n            {\n                name: 'gender',\n                type: 'string'\n            },\n            {\n                name: 'language',\n                type: 'string'\n            },\n            {\n                name: 'birthdate',\n                type: 'date'\n            },\n            {\n                name: 'enthnicity',\n                type: 'string'\n            },\n            {\n                name: 'zip_code',\n                type: 'integer'\n            },\n            {\n                name: 'home_latitude',\n                type: 'decimal'\n            },\n            {\n                name: 'home_longitude',\n                type: 'decimal'\n            },\n            {\n                name: 'home_geo_hash',\n                type: 'decimal'\n            },\n        ]\n\t}\n]\n","// Component for navigating files (left nav bar)\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './FileList.scss';\n\nexport default class FileList extends React.PureComponent {\n\n\trender() {\n\t\tconst props = this.props\n\t\treturn (\n\t\t\t<div className=\"FileList\">\n\t\t\t\t<div className=\"dataExplo fTitle\">Data Explorer</div>\n\t\t\t\t<div className=\"fileCount fTitle\"> {props.files.length+' files'}</div>\n\t\t\t\t{ props.files.map((f, idx) => (\n\t\t\t\t\t\t<div key={ f.name } \n\t\t\t\t\t\t\tid={ idx }\n\t\t\t\t\t\t\tclassName= {idx===props.selectedIdx ? 'selected' : '' }\n\t\t\t\t\t\t\tonClick={ props.loading ? null : props.clickFile }>\n\t\t\t\t\t\t\t\t{ f.name }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) \n\t\t\t\t)}\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nFileList.propTypes = {\n\tfiles: PropTypes.array.isRequired,\n\tselectedIdx: PropTypes.number.isRequired,\n\tclickFile: PropTypes.func.isRequired,\n\tloading: PropTypes.bool\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CloudDownload, ViewModule, Label } from '@material-ui/icons';\n\nimport './TitleBar.scss';\n\nexport default class TitleBar extends React.Component {\n\n\trender() {\n\t\tconst props = this.props\n\t\treturn (\n\t\t\t<div className=\"TitleBar\">\n\t\t\t\t<h1>\n\t\t\t\t\t{ props.name + ' ' } \n\t\t\t\t\t<span>{ props.count }</span>\n\t\t\t\t</h1>\n\t\t\t\t<div className=\"topIcons\">\n\t\t\t\t\t{props.view==='table' \n\t\t\t\t\t\t? \n\t\t\t\t\t\t\t<Label onClick={props.toggleViewFunc} />\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\t<ViewModule onClick={props.toggleViewFunc} />\n\t\t\t\t\t}\n\t\t\t\t\t<a href={ props.url } target=\"_new\"><CloudDownload /></a>\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nTitleBar.propTypes = {\n    name: PropTypes.string.isRequired,\n\tcount: PropTypes.string.isRequired,\n\turl: PropTypes.string.isRequired,\n\ttoggleViewFunc: PropTypes.func.isRequired,\n\tview: PropTypes.string.isRequired,\n}","// Bar charts component\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nimport './Bars.scss';\n\nexport default class Bars extends React.Component {\n\n    render() {\n        const buckets = this.props.data\n\n        if(buckets){\n            const maxSize = d3.max(buckets)\n    \n            return (\n                <div className=\"Bars\"> \n                    {buckets.map((b, idx) => (\n                            <div key={'b'+idx} style={{ \n                                    left: (idx * 10)+'px', \n                                    height: parseInt(100*(b/maxSize))+'px'\n                                }} \n                                title={b}></div>\n                        )\n                    )}\n                </div>\n            )\n        }else{\n            return (\n                <div className=\"NoBars\">N/A</div>\n            )\n        }\n    }\n}\n\nBars.propTypes = {\n    data: PropTypes.array\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Bars from './Bars';\n\nimport './Table.scss';\n\nexport default class Table extends React.PureComponent {\n\n\tstate = {\n\t\tsorting: false\n\t}\n\n\trender() {\n\t\tconst props = this.props\n\t\tconst data = props.data\n\t\tconst stats = props.stats\n\t\tconst metadata = props.metadata\n\t\tconst columns = metadata.columns\n\t\tconst sorting = props.sorting\n\n\t\treturn (\n\t\t\t<table className=\"Table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className=\"rowLabels\">\n\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t<th id={c.name} key={'c'+idx} className={ c.type==='integer' || c.type==='decimal' ? 'rightAlign' : '' }\n\t\t\t\t\t\t\t\tonClick={ props.sortFunc }>\n\t\t\t\t\t\t\t\t\t<div>{c.name}</div>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className=\"rowHisto\">\n\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t<td key={'c'+idx}>\n\t\t\t\t\t\t\t\t<Bars data={ stats[c.name].hist } />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody className={sorting ? 'hidden' : ''}>\n\t\t\t\t\t{ data.map((d, idx) => (\n\t\t\t\t\t\t<tr key={'r'+idx}>\n\t\t\t\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t\t\t\t<td key={'c'+idx} className={ c.type==='integer' || c.type==='decimal' ? 'rightAlign' : '' }>\n\t\t\t\t\t\t\t\t\t{d[c.name]}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t)\n\t}\n\n}\n\nTable.propTypes = {\n    metadata: PropTypes.object.isRequired,\n    data: PropTypes.array.isRequired,\n\tstats: PropTypes.object,\n\tsortFunc: PropTypes.func.isRequired,\n\tlastSort: PropTypes.string,\n\tsorting: PropTypes.bool,\n}","// Component to disply list of columns and info like their min, max, null count...\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Stats.scss';\n\nconst statNames = [\"nulls\",\"min\",\"max\",\"mean\",\"stdDev\"] //,\"total\"\n\nexport default class Stats extends React.PureComponent {\n\n\trender() {\n\t\tconst metadata = this.props.metadata\n\t\tconst columns = metadata.columns\n\t\t\n\t\treturn (\n\t\t\t<div className=\"Stats\">\n\t\t\t\t{columns.map((c, idx) => (\n\t\t\t\t\t<div key={'c'+idx}>\n\t\t\t\t\t\t<h3>{c.name} <span>{c.type}</span></h3>\n\t\t\t\t\t\t{ this.renderFeature(c) }\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<span className=\"clearer\"></span>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderFeature(col) {\n\t\tconst colStats = this.props.stats[col.name]\n\t\t// TODO: handle types below\n\t\tif(['string', 'date', 'time', 'timestamp'].includes(col.type)) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<label>nulls</label>\n\t\t\t\t\t<span>{ colStats.nulls }</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}else{\n\t\t\treturn statNames.map(sn => (\n\t\t\t\t<div key={ sn }>\n\t\t\t\t\t<label>{ sn }</label>\n\t\t\t\t\t<span>{ colStats[sn] }</span>\n\t\t\t\t</div>\n\t\t\t))\n\t\t}\n\t}\n}\n\n\nStats.propTypes = {\n    metadata: PropTypes.object.isRequired,\n    stats: PropTypes.object.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport './Spinner.scss';\n\n// HTML & CSS from http://tobiasahlin.com/spinkit/\n\nexport default class Spinner extends React.PureComponent {\n\n    render() {\n\n        return (\n            <div className=\"evol-loading\"> \n                <div className=\"loading_txt\">{this.props.message || 'Loading...'}</div> \n                <div className=\"spinner\">\n                    <div className=\"bounce1\"></div>\n                    <div className=\"bounce2\"></div>\n                    <div className=\"bounce3\"></div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSpinner.propTypes = {\n\tmessage: PropTypes.string,\n}\n","// Component for viewing a file ( table or columns stats)\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TitleBar from './TitleBar';\nimport Table from './Table';\nimport Stats from './Stats'; \nimport Spinner from './Spinner'; \n\nexport default class DataSpace extends React.Component {\n\n\tstate = {\n\t\tview: 'table'\n\t}\n\n\trender() {\n\t\tconst props = this.props\n\t\tconst data = props.data\n\t\tconst metadata = this.props.metadata\n\t\tlet count = ((data && data.length) ? data.length + ' rows, ' : '') + metadata.columns.length + ' columns'\n\n\t\treturn (\n\t\t\t<div id=\"DataSpace\" className=\"DataSpace\">\n\t\t\t\t<TitleBar name={ metadata.name } count={ count } url={ metadata.url } toggleViewFunc={ this.toggleView } view={this.state.view} />\n\t\t\t\t<div className=\"file_desc\">{ metadata.description }</div>\n\t\t\t\t{ props.loading \n\t\t\t\t\t?\n\t\t\t\t\t\t<Spinner />\n\t\t\t\t\t: \n\t\t\t\t\t\tthis.state.view === 'table'\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<Table metadata={ metadata } data={ data } stats={ props.stats } sortFunc={ props.sortFunc } lastSort={ props.lastSort } />\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<Stats metadata={ metadata } stats={ props.stats } />\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n\ttoggleView = () => {\n\t\tdocument.getElementById('DataSpace').scrollTo(0, 0)\n\t\tthis.setState({\n\t\t\tview: this.state.view==='table' ? 'stats' : 'table'\n\t\t})\n\t}\n\n}\n\n\nDataSpace.propTypes = {\n\tloading: PropTypes.bool,\n\tmetadata: PropTypes.object.isRequired,\n\tdata: PropTypes.array,\n\tstats: PropTypes.object,\n\tsortFunc: PropTypes.func.isRequired,\n\tlastSort: PropTypes.string\n}","\nimport React from 'react';\nimport meta from './metadata.js';\nimport FileList from './components/FileList.js';\nimport DataSpace from './components/DataSpace.js';\nimport * as d3 from 'd3';\n\nimport './App.scss';\n\nexport default class App extends React.Component {\n\n\tdataCache = {}\n\tstate = {\n\t\tselectedIdx: 0,\n\t\tdata: null,\n\t\tstats: null,\n\t\tloading: true,\n\t}\n\n\tclickFile = evt => {\n\t\tconst selectedIdx = parseInt(evt.currentTarget.id)\n\t\tthis.setState({\n\t\t\tselectedIdx: selectedIdx,\n\t\t\tdata: null,\n\t\t\tstats: null,\n\t\t\tloading: true,\n\t\t\terror: null\n\t\t})\n\t\tthis.getData(meta[selectedIdx])\n\t}\n\n\trender() {\n\t\tconst idx = this.state.selectedIdx\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<FileList loading={ this.state.loading }  files={ meta } clickFile={this.clickFile} selectedIdx={idx} />\n\t\t\t\t{this.state.error ? (\n\t\t\t\t\t<div className=\"error\">\n\t\t\t\t\t\tAn error occured while requesting data from the server.\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<DataSpace \n\t\t\t\t\t\tloading={ this.state.loading } \n\t\t\t\t\t\tmetadata={ meta[idx] } \n\t\t\t\t\t\tdata={ this.state.data } \n\t\t\t\t\t\tstats={ this.state.stats } \n\t\t\t\t\t\tsortFunc={ this.sortData }\n\t\t\t\t\t\tlastSort={ this.state.lastSort }\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\t//document.title = \n\t\t//window.scrollTo(0, 0)\n\t\tthis.getData(meta[this.state.selectedIdx])\n\t}\n\n\tgetData(metadata) {\n\t\t// get data, cast values, and gather stats\n\t\tconst url = metadata.url\n\t\tif(this.dataCache[url]){\n\t\t\tconst fullData = this.dataCache[url]\n\t\t\tthis.setState({\n\t\t\t\tdata: fullData.data,\n\t\t\t\tstats: fullData.stats,\n\t\t\t\tloading: false,\n\t\t\t\tlastSort: '',\n\t\t\t})\n\t\t}else{\n\t\t\tconst cols = metadata.columns\n\t\t\tlet stats = {}\n\t\t\tcols.forEach(c => stats[c.name] = c.type === 'string' ? {\n\t\t\t\tnulls: 0,\n\t\t\t} : {\n\t\t\t\tmin: Number.POSITIVE_INFINITY,\n\t\t\t\tmax: Number.NEGATIVE_INFINITY,\n\t\t\t\tnulls: 0,\n\t\t\t\ttotal: 0\n\t\t\t})\n\t\t\tconst parsingMap = {\n\t\t\t\tinteger: v => parseInt(v),\n\t\t\t\tdecimal: v => parseFloat(v),\n\t\t\t\t//TODO: type casting\n\t\t\t\ttime: v => v,\n\t\t\t\tdate: v => v,\n\t\t\t\ttimestamp: v => v,\n\t\t\t}\n\t\t\td3.csv(url, d => {\n\t\t\t\tcols.forEach(c => {\n\t\t\t\t\tif(c.type!=='string'){\n\t\t\t\t\t\tconst colName = c.name\n\t\t\t\t\t\tlet v = d[colName]\n\t\t\t\t\t\tif(v===''){\n\t\t\t\t\t\t\tstats[c].nulls += 1\n\t\t\t\t\t\t\td[colName] = null\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tv = parsingMap[c.type](v)\n\t\t\t\t\t\t\td[colName] = v\n\t\t\t\t\t\t\tif(c.type==='integer' || c.type==='decimal'){\n\t\t\t\t\t\t\t\tif(v > stats[colName].max){\n\t\t\t\t\t\t\t\t\tstats[colName].max = v\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(v < stats[colName].min){\n\t\t\t\t\t\t\t\t\tstats[colName].min = v\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tstats[colName].total += v\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn d\n\t\t\t}).then(data => {\n\t\t\t\tcols.forEach(c => {\n\t\t\t\t\tif(c.type!=='string'){\n\t\t\t\t\t\tconst statCol = stats[c.name]\n\t\t\t\t\t\tconst div = data.length - statCol.nulls\n\t\t\t\t\t\tstatCol.mean = div!==0 ? (statCol.total / div) : 'N/A'\n\t\t\t\t\t\tif(c.type==='integer' || c.type==='decimal'){\n\t\t\t\t\t\t\tconst columValues = data.map(d => d[c.name])\n\t\t\t\t\t\t\tstatCol.stdDev = d3.deviation(columValues)\n\t\t\t\t\t\t\tstatCol.hist = d3.histogram()\n\t\t\t\t\t\t\t\t.domain([statCol.min, statCol.max])\n\t\t\t\t\t\t\t\t.thresholds(19)(columValues)\n\t\t\t\t\t\t\t\t.map(b => b.length)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tconst info = {\n\t\t\t\t\tdata: data,\n\t\t\t\t\tstats: stats,\n\t\t\t\t}\n\t\t\t\tthis.dataCache[url] = info\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tlastSort: '',\n\t\t\t\t\t...info\n\t\t\t\t})\n\n\t\t\t}).catch(err => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: err.message\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tsortData = evt => {\n\t\tconst colId = evt.currentTarget.id\n\t\tconst cols = meta[this.state.selectedIdx].columns\n\t\tconst col = cols.find(c => c.name===colId)\n\t\tconst colName = col.name\n\n\t\tif(colName=== this.state.lastSort){\n\t\t\tthis.setState({ \n\t\t\t\tdata: this.state.data.reverse(),\n\t\t\t\tlastSort: '',\n\t\t\t })\n\t\t}else{\n\t\t\tlet comparatorFunc\n\t\t\tif(col.type==='string'){\n\t\t\t\tcomparatorFunc = (a, b) => (a[colName]||'').localeCompare(b[colName]||'')\n\t\t\t}else{\n\t\t\t\t// TODO: other cases\n\t\t\t\tcomparatorFunc = (a, b) => {\n\t\t\t\t\tif(a[colName]<b[colName]){\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\tif(b[colName]<a[colName]){\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({ \n\t\t\t\tdata: this.state.data.sort(comparatorFunc),\n\t\t\t\tlastSort: colName,\n\t\t\t })\n\t\t}\n\n\t}\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}